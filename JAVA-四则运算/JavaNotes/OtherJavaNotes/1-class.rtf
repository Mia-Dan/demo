{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Monaco;
\f3\fmodern\fcharset0 Courier;\f4\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue10;\red102\green177\blue50;}
{\*\expandedcolortbl;;\cssrgb\c99942\c98555\c0;\cssrgb\c46532\c73327\c25364;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qj\partightenfactor0

\f0\fs24 \cf0 A class can be visualized as a three-compartment box, as illustrated:\
\
1. 
\b Name
\b0  (or identity): identifies the class.\
2. 
\b Variables
\b0  (or attribute, state, field): contains the static attributes of the class.\
3. 
\b Methods
\b0  (or behaviors, function, operation): contains the dynamic behaviors of the class.\
\
(A class encapsulates the data structures (in variables) and algorithms (in methods). The values of the variables constitute its state. The methods constitute its behaviors.)\
\
In other words, a class encapsulates the static attributes (data) and dynamic behaviors (operations that operate on the data) in a box.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs26 \cf0 \expnd0\expndtw0\kerning0
subclass\

\f0\b0\fs24 \kerning1\expnd0\expndtw0 \

\f1\fs26 \cb2 \expnd0\expndtw0\kerning0
Common behavior can be defined in a 
\b superclass
\b0  and inherited into a 
\b subclass
\b0  using the 
\b extends
\b0  keyword.\cb1 \
\
The syntax for creating a subclass is simple. At the beginning of your class declaration, use the 
\f2 extends
\f1  keyword, followed by the name of the class to inherit from:\
\
\pard\pardeftab720\partightenfactor0

\f3 \cf0 class MountainBike 
\f4\b extends
\f3\b0  Bicycle \{\
    \cf3 // new fields and methods defining a mountain bike would go here\
\cf0 \}\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 This gives 
\f2 MountainBike
\f1  all the same fields and methods as 
\f2 Bicycle
\f1 , yet allows its code to focus exclusively on the features that make it unique. This makes code for your subclasses easy to read. However, you must take care to properly document the state and behavior that each superclass defines, since that code will not appear in the source file of each subclass.}